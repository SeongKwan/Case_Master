@mixin shadow($z-depth: 1, $strength: 1, $color: black) {
    @if $z-depth == 1 {
        box-shadow: 0 1px 3px rgba($color, $strength * 0.14), 0 1px 2px rgba($color, $strength * 0.24);
    }

    @if $z-depth == 2 {
        box-shadow: 0 3px 6px rgba($color, $strength * 0.16), 0 3px 6px rgba($color, $strength * 0.23);
    }

    @if $z-depth == 3 {
        box-shadow: 0 10px 20px rgba($color, $strength * 0.19), 0 6px 6px rgba($color, $strength * 0.23);
    }

    @if $z-depth == 4 {
        box-shadow: 0 15px 30px rgba($color, $strength * 0.25), 0 10px 10px rgba($color, $strength * 0.22);
    }

    @if $z-depth == 5 {
        box-shadow: 0 20px 40px rgba($color, $strength * 0.30), 0 15px 12px rgba($color, $strength * 0.22);
    }

    @if ($z-depth < 1) or ( $z-depth > 5 ) {
        @warn "$z-depth must be between 1 and 5";
    }
}

@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin transEase {
    transition: all 0.2s ease;
}
@mixin transTime($time) {
    transition: all $time ease;
}

/**
*** Button
**/
@mixin cm-button() {
    display: inline-block;
    cursor: pointer;
    background-color: $brand-tertiary;
    padding: 0.8em 1em;
    @include transEase;
}

@mixin cm-input() {
    padding: 0.8em 1em;
    margin-bottom: 1em;
    background-color: white;
    @include transEase;
}

@mixin cm-a() {
    position: relative;
    cursor: pointer;
    @include transEase();
    span {
        position: absolute;
        top: 1.4em;
        left: 0;
        width: 100%;
        height: 1px;
        background-color: white;
        opacity: 0;
        @include transEase();
    }
    &:hover span {
        opacity: 1;
        background-color: $brand-primary;
    }
}
    
// Map with much breakpoints
$breakpoints: (
    "xs": 480px,
    "sm": 736px, 
    "md": 980px, 
    "lg": 1280px, 
    "xl": 1690px
) !default;;

// Respond-To Mixin
@mixin media($size) {
    @if map-has-key($breakpoints, $size) {
        $value: map-get($breakpoints, $size);
        
        @media screen and (min-width: $value) {
            @content;
        }
    } @else {
        @warn "Unknown `#{$size}` in $breakpoints";
    }
}